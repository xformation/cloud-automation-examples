node {
    def mvnHome
    def tags 
    try {
        stage('Checkout') { //(1)
            git branch: 'papu', credentialsId: '0957eb3e-b490-4d0a-b06e-c993ec94a732', url: 'https://bitbucket.org/synectiks/cloudautomationexamples.git'
            mvnHome = tool 'maven3'
        }
        stage('Build') { //(2)
            dir('jenkin/services/StudentApp') {
                sh "echo building"
            }
        }
        stage('Tests') { //(3)
            dir('jenkin/tests/serenitytest') {
                 tags = "studentfeature:NEGATIVE,studentfeature:SMOKE" 
                 sh "'${mvnHome}/bin/mvn' clean  verify  serenity:aggregate"
            }          
        }
        stage('Report Gathering') {
            dir('jenkin/tests/serenitytest') {
                publishHTML([allowMissing: true, alwaysLinkToLastBuild: true, keepAll: true, reportDir: 'target/site/serenity', reportFiles: 'index.html', reportName: 'Serenity Reports'])
            }
        }
        stage('Report') { //(4)
            if (currentBuild.currentResult == 'UNSTABLE') {
                currentBuild.result = "UNSTABLE"
            } else {
                currentBuild.result = "SUCCESS"
            }
            step([$class: 'InfluxDbPublisher', customData: null, customDataMap: null, customPrefix: null, target: 'grafana'])
        }
    } catch (Exception e) {
        dir('jenkin/tests/serenitytest') {
                publishHTML([allowMissing: true, alwaysLinkToLastBuild: true, keepAll: true, reportDir: 'target/site/serenity', reportFiles: 'index.html', reportName: 'Serenity Reports'])
        }
        currentBuild.result = "FAILURE"
        step([$class: 'InfluxDbPublisher', customData: null, customDataMap: null, customPrefix: null, target: 'grafana'])
    }
}